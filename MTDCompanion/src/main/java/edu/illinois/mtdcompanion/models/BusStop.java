package edu.illinois.mtdcompanion.models;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

/**
 * Model for storing bus stops in database
 * @author Tom Olson
 */
@DatabaseTable(tableName = "BusStop")
public class BusStop {

	/**
	 * SLF4J Logger object for logging in BusStop class
	 */
	@SuppressWarnings("unused")
	private static final Logger logger = LoggerFactory.getLogger(BusStop.class);

	/**
	 * Name of column used to store {@link #id} in database
	 */
	public static final String ID = "ID";

	/**
	 * Name of column used to store {@link #stopCode} in database
	 */
	public static final String STOP_CODE = "Stop_Code";

	/**
	 * Name of column used to store {@link #stopID} in database
	 */
	public static final String STOP_ID = "Stop_ID";

	/**
	 * Name of column used to store {@link #stopID} in database
	 */
	public static final String STOP_NAME = "Stop_Name";

	/**
	 * Name of column used to store {@link #latitude} in database
	 */
	public static final String LATITUDE = "Latitude";

	/**
	 * Name of column used to store {@link #longitude} in database
	 */
	public static final String LONGITUDE = "Longitude";

	/**
	 * Arbitrary integer value used as unique ID for this table <br>
	 * Automatically generated by database
	 */
	@DatabaseField(columnName = ID, generatedId = true)
	private int id;

	/**
	 * Stop code for bus stop
	 */
	@DatabaseField(columnName = STOP_CODE, uniqueCombo = true, index = true)
	private String stopCode;

	/**
	 * Stop ID for bus stop
	 */
	@DatabaseField(columnName = STOP_ID, uniqueCombo = true, index = true)
	private String stopID;

	/**
	 * Name of bus stop
	 */
	@DatabaseField(columnName = STOP_NAME)
	private String stopName;

	/**
	 * Latitude of bus stop location
	 */
	@DatabaseField(columnName = LATITUDE)
	private double latitude;

	/**
	 * Longitude of bus stop location
	 */
	@DatabaseField(columnName = LONGITUDE)
	private double longitude;

	/**
	 * Default constructor
	 */
	public BusStop() {
		// Used by ORMLite for reflection
	}

	/**
	 * Overloaded constructor
	 * @param stopCode Assigned to {@link #stopCode}
	 * @param stopID Assigned to {@link #stopID}
	 * @param stopName Assigned to {@link #stopName}
	 * @param latitude Assigned to {@link #latitude}
	 * @param longitude Assigned to {@link #longitude}
	 */
	public BusStop(String stopCode, String stopID, String stopName, double latitude, double longitude) {
		this.stopCode = stopCode;
		this.stopID = stopID;
		this.stopName = stopName;
		this.latitude = latitude;
		this.longitude = longitude;
	}

	/**
	 * Get stop code
	 * @return {@link #stopCode}
	 */
	public String getStopCode() {
		return stopCode;
	}

	/**
	 * Set stop code
	 * @param stopCode Assigned to {@link #stopCode}
	 */
	public void setStopCode(String stopCode) {
		this.stopCode = stopCode;
	}

	/**
	 * Get stop ID
	 * @return {@link #stopID}
	 */
	public String getStopID() {
		return stopID;
	}

	/**
	 * Set stop ID
	 * @param stopID Assigned to {@link #stopID}
	 */
	public void setStopID(String stopID) {
		this.stopID = stopID;
	}

	/**
	 * Get stop name
	 * @return {@link #stopName}
	 */
	public String getStopName() {
		return stopName;
	}

	/**
	 * Set stop name
	 * @param stopName Assigned to {@link #stopName}
	 */
	public void setStopName(String stopName) {
		this.stopName = stopName;
	}

	/**
	 * Get latitude
	 * @return {@link #latitude}
	 */
	public double getLatitude() {
		return latitude;
	}

	/**
	 * Set latitude
	 * @param latitude Assigned to {@link #latitude}
	 */
	public void setLatitude(double latitude) {
		this.latitude = latitude;
	}

	/**
	 * Get longitude
	 * @return {@link #longitude}
	 */
	public double getLongitude() {
		return longitude;
	}

	/**
	 * Set longitude
	 * @param longitude Assigned to {@link #longitude}
	 */
	public void setLongitude(double longitude) {
		this.longitude = longitude;
	}

	/**
	 * Returns a string representation of BusStop
	 */
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();

		sb.append("StopCode=").append(stopCode);
		sb.append(", ").append("StopID=").append(stopID);
		sb.append(", ").append("StopName=").append(stopName);
		sb.append(", ").append("Latitude=").append(latitude);
		sb.append(", ").append("Longitude=").append(longitude);

		return sb.toString();
	}

}
